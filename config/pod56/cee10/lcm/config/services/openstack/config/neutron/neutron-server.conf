# neutron.conf
[DEFAULT]

interface_driver = openvswitch

core_plugin = ml2

# The service plugins Neutron will use (list value)
service_plugins = {{ neutron_config['service_plugins_neutron'] | join(',') }}

# Number of DHCP agents scheduled to host a tenant network. If this number is
# greater than 1, the scheduler automatically assigns multiple DHCP agents for
# a given tenant network, providing high availability for DHCP service.
# (integer value)
# Minimum value: 1
dhcp_agents_per_network = 3

# Automatically remove networks from offline DHCP agents.
# (boolean value)
# Default: true
allow_automatic_dhcp_failover = false

# Enable HA mode for virtual routers. (boolean value)
l3_ha = false
max_l3_agents_per_router = 2
min_l3_agents_per_router = 2
# If True, then allow plugins that support it to create VLAN transparent
# networks. (boolean value)
vlan_transparent = true

# MTU of the underlying physical network. Neutron uses this value to calculate
# MTU for all virtual network components. For flat and VLAN networks, neutron
# uses this value without modification. For overlay networks such as VXLAN,
# neutron automatically subtracts the overlay protocol overhead from this
# value. Defaults to 1500, the standard value for Ethernet. (integer value)
# Deprecated group/name - [ml2]/segment_mtu
global_physnet_mtu = 2140

# Automatically reschedule routers from offline L3 agents to online L3 agents.
# (boolean value)
allow_automatic_l3agent_failover = true

[service_providers]
{% if neutron_config['service_providers_neutron'] is defined and neutron_config['service_providers_neutron']|length %}
service_provider = {{ neutron_config['service_providers_neutron'] | join(',') }}
{% endif %}

[oslo_policy]
# The relative or absolute path of a file that maps roles to permissions for a
# given service. Relative paths must be specified in relation to the
# configuration file setting this option. (string value)
policy_file=/etc/neutron/policy.json

[database]
# Maximum number of SQL connections to keep open in a pool. Setting a value of
# 0 indicates no limit. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
#max_pool_size = 5
max_pool_size=30

# If set, use this value for max_overflow with SQLAlchemy. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
max_overflow = 60

[placement]
endpoint_type = internal

[quotas]
# Default number of resource allowed per tenant. A negative value means
# unlimited. (integer value)
default_quota = -1

# Number of networks allowed per tenant. A negative value means unlimited.
# (integer value)
quota_network = -1

# Number of subnets allowed per tenant, A negative value means unlimited.
# (integer value)
quota_subnet = -1

# Number of ports allowed per tenant. A negative value means unlimited.
# (integer value)
quota_port = -1

# Number of routers allowed per tenant. A negative value means unlimited.
# (integer value)
quota_router = -1

# Number of floating IPs allowed per tenant. A negative value means unlimited.
# (integer value)
quota_floatingip = -1

# Number of security groups allowed per tenant. A negative value means
# unlimited. (integer value)
quota_security_group = -1

# Number of security rules allowed per tenant. A negative value means
# unlimited. (integer value)
quota_security_group_rule = -1

# Number of rbac policies allowed per tenant. A neagative value means
# unlimited. (integer value)
quota_rbac_policy = -1

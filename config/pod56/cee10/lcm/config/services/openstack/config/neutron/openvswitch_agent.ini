# openvswitch_agent.ini
[DEFAULT]

[ovs]
{% if my_dpdk_interfaces|length != 0 and sn_bond_devices|length == 0 %}
datapath_type=netdev
{% else %}
datapath_type=system
{% endif %}
integration_bridge=br-int
{% if ovs_config['bridge_mappings'] %}
bridge_mappings={{ ovs_config['bridge_mappings'] | join(',') }}
{% endif %}
{% if ovs_config['ovs_resource_provider_bandwidths'] %}
resource_provider_bandwidths={{ ovs_config['ovs_resource_provider_bandwidths'] | join(',') }}
{% endif %}
{% if 'rp_packet_processing_without_direction' in ovs_config %}
resource_provider_packet_processing_without_direction={{ ovs_config['rp_packet_processing_without_direction'] }}
{% endif %}
{% if 'rp_packet_processing_with_direction' in ovs_config %}
resource_provider_packet_processing_with_direction={{ ovs_config['rp_packet_processing_with_direction'] }}
{% endif %}
#ovsdb_connection = tcp:127.0.0.1:{{ ovsdb_port }}
#local_ip = {{ tunnel_interface_address }}

# OVS vhost-user socket directory. (string value)
vhostuser_socket_dir = /run/openvswitch

[agent]
tunnel_types =
# If qos extension is left out, the QoS dataplane enforcement
# and DSCP marking will be disabled.
extensions=qos
l2_population=False
drop_flows_on_start=False
enable_distributed_routing=False
arp_responder=False

[securitygroup]
firewall_driver = {{ firewall_driver | join(',') }}

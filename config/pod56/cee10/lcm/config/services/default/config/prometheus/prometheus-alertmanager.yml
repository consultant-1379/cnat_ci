# prometheus-alertmanager.yml
global:
  resolve_timeout: 5m
  smtp_require_tls: true
route:
  group_by: ['alarm','instance','name']
  group_wait: 15s
  group_interval: 60s
  repeat_interval: 24h
  receiver: 'web.hook'
receivers:
  - name: 'web.hook'
    webhook_configs:
    - url: "{{ internal_protocol }}://{{ kolla_internal_fqdn }}:{{ watchmen_webhook_listen_port }}"
  - name: default-receiver
{% if enable_vitrage | bool and enable_vitrage_prometheus_datasource | bool %}
    webhook_configs:
      - send_resolved: true
        url: '{{ public_protocol }}://{{ kolla_external_fqdn | put_address_in_context('url') }}:{{ vitrage_api_port }}/v1/event'
        http_config:
          basic_auth:
            username: '{{ keystone_admin_user }}'
            password: '{{ keystone_admin_password }}'
{% endif %}
templates: []
inhibit_rules:
  - source_match:
      severity: minor
    target_matchers: [ severity = "warning", ignore_inhibit != "true" ]
    equal: ['exported_instance', 'alarm']
  - source_match:
      severity: major
    target_matchers: [ severity = "warning", ignore_inhibit != "true" ]
    equal: ['exported_instance', 'alarm']
  - source_match:
      severity: major
    target_matchers: [ severity = "minor", ignore_inhibit != "true" ]
    equal: ['exported_instance', 'alarm']
  - source_match:
      severity: critical
    target_matchers: [ severity = "warning", ignore_inhibit != "true" ]
    equal: ['exported_instance', 'alarm']
  - source_match:
      severity: critical
    target_matchers: [ severity = "minor", ignore_inhibit != "true" ]
    equal: ['exported_instance', 'alarm']
  - source_match:
      severity: critical
    target_matchers: [ severity = "major", ignore_inhibit != "true" ]
    equal: ['exported_instance', 'alarm']

[DEFAULT]

# Allow destination machine to match source for resize.
# default: False
allow_resize_to_same_host = True

# Amount of time in seconds an instance can be in BUILD before going into ERROR status.
# default: 0 (disabled)
instance_build_timeout=36000

# Number of seconds between instance network information cache updates
# default: 60
heal_instance_info_cache_interval = 600

# Maximum time in seconds since last check-in for up service. For more
# information, refer to the documentation. (integer value)
service_down_time = 30

# Virtual CPU to physical CPU allocation ratio. For more information, refer to
# the documentation. (floating point value)
# Minimum value: 0
cpu_allocation_ratio = 1.0

# Virtual RAM to physical RAM allocation ratio. For more information, refer to
# the documentation. (floating point value)
# Minimum value: 0
ram_allocation_ratio = 1.0

# Force injection to take place on a config drive
force_config_drive=True

# Name and optionally path of the tool used for ISO image creation
mkisofs_cmd=/usr/bin/mkisofs

# Enable vif multiqueue via flavor extra specs. (boolean value)
multiqueue_via_flavor = true

# Enables returning of the instance password by the relevant server API calls
# default: True
enable_instance_password=False

# A list of monitors that can be used for getting compute metrics
compute_monitors=cpu.virt_driver

# Automatically confirm resizes and cold migrations after N seconds.
# default: 0 (disabled)
resize_confirm_window = 0

# Waiting time interval (seconds) between block device allocation retries on failures
# default: 3
block_device_allocate_retries_interval=10

# Number of times to retry block device allocation on failures.
# default: 60
block_device_allocate_retries=300

# Enable ipv6 in nova compute. (boolean value)
use_ipv6 = True

{% set custom_properties = hostvars[inventory_hostname][service_name + '_custom_properties'] %}

# Defines which physical CPUs (pCPUs) can be used by instance virtual CPUs (vCPUs)
vcpu_pin_set = {{ custom_properties.novaVcpuPinSet }}

# (String) DEPRECATED: The full class name of the security API class
security_group_api=neutron

# (String) Firewall driver to use with nova-network service.
# This option only applies when using the nova-network service.
# When using another networking services, such as Neutron, this should be to
# set to the NoopFirewallDriver.
firewall_driver=nova.virt.firewall.NoopFirewallDriver

# If set, send compute.instance.update notifications on
# instance state changes.  Valid values are None for no
# notifications, "vm_state" for notifications on VM state
# changes, or "vm_and_task_state" for notifications on VM and
# task state changes. (string value)
notify_on_state_change = vm_and_task_state

# Specifies which notification format shall be used by nova.
# Possible values:
#   unversioned: Only the legacy unversioned notifications are emitted.
#   versioned: Only the new versioned notifications are emitted.
#   both: Both the legacy unversioned and the new versioned notifications are emitted.
notification_format = unversioned

[pci]
#passthrough_whitelist =

[libvirt]
# If the free disk precentage is less than this threshold, unused cached base
# images will be deleted until the free disk precentage is higher than the
# threshold. (Float Value)
minimum_free_disk_percentage=30

# Specific cachemodes to use for different disk types
# default: none
disk_cachemodes=file=directsync,block=none

# Set to "host-model" to clone the host CPU feature flags;
# "host-passthrough" to use the host CPU model exactly
cpu_mode=host-passthrough

# NOTE: below options do not exist in mitaka nova configuration
allow_transparent_cpu_allocation=False
use_hugepages=True

# QosBandwidthFilter configuration
# 2x10G data NICs in active-standby bonding mode = 10G
# 2x10G data NICs in balance-slb bonding mode = 20G
[bandwidth_limits]
neutron_networks = default:20000000

# * True: Live snapshot is disabled when using libvirt
# * False: Live snapshots are always used when snapshotting (as long as
#   there is a new enough libvirt and the backend storage supports it)
#  (boolean value)
# Without enabled live snapshots qemu guest agent can't work properly
[workarounds]
disable_libvirt_livesnapshot = False

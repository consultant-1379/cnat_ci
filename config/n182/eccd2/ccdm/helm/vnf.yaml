vnflcm:
  orchestrator: helm
  vnfInstanceName: n182-vpod2-ccdm1
  vnfProductName: ERIC-CCDM
  vnfSoftwareVersion: 1.11.26
  values-file: values.yaml
  clusterName: n182-eccd2
  namespace: ccdm
  csar-file: /proj/pccc_builds/images/CCXX/CCDM/CCDM_1.11/CCDM_1.11_PRG_T-152183/Ericsson.CCDM.CXP9037622_1_11_26.csar
access-info:
  oam: ccdm1-n182-vpod2.seli.gic.ericsson.se
  ldap-admin:
    user: sysadmin
    pass: c3lzQWRtMW5ARGF5MA==
  users:
  - user: ccdm-admin
    pass: RG01R0NAUzBsdXQhb24=
    pass-init: Q2hhbmdlbWVAMXN0
  - user: ccdm-sec
    pass: RG01R0NAUzBsdXQhb24=
    pass-init: Q2hhbmdlbWVAMXN0
pipeline:
  # This module takes very long time so it is commented out for now. But this config has been verified for CCES.
#- module: push-images-to-registry
#  cleanup: true
#  remote-server:
#    host: n182-vpod1-cnis-cluster.seli.gic.ericsson.se
#    user: eccd
#    ssh-key: /lab/pccc_utils/scripts/ssh_key2/n182vpod1_key
#  tool:
#    cli: nerdctl
#  registry:
#    url: registry01.eoaas.n182.vpod1.seli.gic.ericsson.se
#    user: vnfm-user
#    pass: RGVmYXVsdFAxMjM0NSE=
#- module: install-crd
#  namespace: eric-crd-ns
#  registry:
#    host: registry01.eoaas.n182.vpod1.seli.gic.ericsson.se
#    username: vnfm-user
#    password: RGVmYXVsdFAxMjM0NSE=
# pullSecret: regcred
#  additional-values:
#    eric-tm-ingress-controller-cr-crd:
#      rbac.create: true
- module: create-namespace
- module: run-k8s-command
  name: Create docker registry secret
  cmd: create secret docker-registry regcred --docker-server=registry01.eoaas.n182.vpod1.seli.gic.ericsson.se --docker-username=vnfm-user --docker-password=DefaultP12345!
- module: create-k8s-secret
  name: eric-sec-ldap-server-creds
  sources:
  - type: literal
    key: adminuser
    value: sysadmin
  - type: literal
    key: passwd
    value: sysAdm1n@Day0
  - type: literal
    key: adminpasswd
    value: $6$fzLPYlRZCpweJMJC$AiNfP0WYE3npY8Za6GxMFoGj75TOl.TS6tmnnky2Bv5wY0Ek8RIoJlr9pyj0LF3wMMaNsNTUH4jp2lIHviJGS0
- module: create-k8s-secret
  name: eric-sec-certm-deployment-configuration
  sources:
  - type: file
    key: eric-sec-certm-deployment-configuration.json
    file: ../eric-sec-certm-deployment-configuration.json
- module: create-k8s-secret
  name: eric-sec-admin-user-management-day0-external-ldap
  sources:
  - type: file
    key: ldap-configuration.json
    file: ../ldap-configuration.json
- module: create-k8s-secret
  name: snmp-alarm-provider-config
  sources:
  - type: file
    key: config.json
    file: ../snmp-config.json
- module: create-k8s-secret
  name: eric-data-distributed-coordinator-creds
  sources:
  - type: literal
    key: etcdpasswd
    value: sysAdm1n@Day0
- module: create-k8s-secret
  name: eric-sec-access-mgmt-creds
  sources:
  - type: literal
    key: kcadminid
    value: admin
  - type: literal
    key: kcpasswd
    value: sysAdm1n@Day0
- module: instantiate
- module: verify-pod-running
  ignore-not-running:
  - eric-udr-app-counters
  - eric-udr-bulk-data-synchronizer
  - eric-udr-cmmanager
  - eric-udr-consistency-check-orchestrator
  - eric-udr-dbmanager
  - eric-udr-dbmonitor
  - eric-udr-gudrestfe
  - eric-udr-import-export-orchestrator
  - eric-udr-ldap-balancer
  - eric-udr-ldapfe
  - eric-udr-migration-orchestrator
  - eric-udr-migration-task
  - eric-udr-notificationsubscription
  - eric-udr-nrfproxy
  - eric-udr-nudrfe
  - eric-udr-provisioningfe
  - eric-udr-rest-notifchecker
  - eric-udr-rest-notifsender
  - eric-udr-soap-notifchecker
  - eric-udr-soap-notifsender
  - eric-udr-prov-sync-fe
- module: verify-pod-ready
  check-interval: 5
  deployments:
  - eric-cm-yang-provider
- module: load-cmyp-user-config
  file: ../user-config.xml
  proto: netconf
  retry-interval: 30
- module: sleep
  duration: 30
- module: change-initial-password
- module: load-cmyp-app-config
  file: ../external-certificates.xml
  user-id: 1
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: ../nrfagent-config.xml
  user-id: 0
  proto: netconf
- module: sleep
  duration: 10
# NOTE: UDR and schema config are skipped since for CNAT verification we only test deployment, no traffic
#- module: load-cmyp-app-config
#  file: ../udr-config.xml
#  user-id: 0
#  proto: netconf
#- module: verify-pod-ready
#  check-interval: 30
#  deployments:
#  - eric-udr-nudrfe
#  statefulsets:
#  - eric-udr-kvdb-ag-server
#- module: sleep
#  duration: 10
#- module: load-cmyp-app-config
#  file: ../schema/hssepc-schema.xml
#  user-id: 0
#  proto: netconf
#- module: sleep
#  duration: 10
#- module: load-cmyp-app-config
#  file: ../schema/eir-schema.xml
#  user-id: 0
#  proto: netconf
#- module: sleep
#  duration: 10
#- module: load-cmyp-app-config
#  file: ../ddc-config.xml
#  user-id: 0
#  proto: netconf
#- module: sleep
#  duration: 10
#- module: load-cmyp-app-config
#  file: ../hssepc-application-counters.xml
#  user-id: 0
#  proto: netconf
#- module: sleep
#  duration: 30
#- module: load-cmyp-app-config
#  file: ../eir-application-counters.xml
#  user-id: 0
#  proto: netconf
#- module: sleep
#  duration: 30
#- module: load-cmyp-app-config
#  file: ../consistency-config.xml
#  user-id: 0
#  proto: netconf
- module: sleep
  duration: 10
# - module: run-k8s-command
#   name: Adding HSS and 5G-EIR service configmap in udr-nrf-agent-targetnfprofiles
#   cmd: 'patch cm udr-nrf-agent-targetnfprofiles -p  ''{ "data": { "udr-nrf-agent-targetnfprofiles-ccdm.json":
#     "{\n  \"targetNfProfiles\": [\n    {\n      \"requesterNfType\": \"UDR\",\n      \"targetNfType\":
#     \"UDM\",\n      \"targetServiceNames\": [\n        \"nudm-uecm\"\n      ]\n    },\n    {\n      \"requesterNfType\":
#     \"UDR\",\n      \"targetNfType\": \"HSS\",\n      \"targetServiceNames\": [\n        \"nhss-uecm\"\n      ]\n    }\n  ]\n}"
#     }}'''
- module: run-k8s-command
  name: Create networkpolicy to allow accessing eric-pm-server and eric-data-search-engine
  cmd: |
    apply -f {file1}
    apply -f {file2}
  inline-files:
    file1: ../network-policy/eric-pm-server-allow.yaml
    file2: ../network-policy/eric-data-search-engine-allow.yaml
- module: run-k8s-command
  name: pm-server ingress
  cmd: create ingress eric-pm-server --rule="eric-pm-server-ccdm1.ingress.node182-cluster2.seli.gic.ericsson.se/*=eric-pm-server:9090"
  # NOTE: next step is skipped because no sftp server configured
#- module: restore-ccdm-data
#  sftp-server: 172.30.36.50
#  sftp-port: 22
#  sftp-path: /root/ccdm/backup/ccdm-data/n182-vpod2_1.44M_IRAT
#  sftp-user: root
#  sftp-pass: bG1jX3hkZw==
#  user-id: 0
#  udr-status-check:
#    check-interval: 30
#    api-path-and-status:
#      /udr/status: OK
#      /udr/reporting/dbManager/status: STARTED
#      /udr/reporting/dbMonitor/status: OK
